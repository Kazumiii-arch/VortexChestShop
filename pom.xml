<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vortex</groupId>
    <artifactId>VortexChestShop</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>VortexChestShop</name>
    <description>A premium player chest shop system with floating item displays.</description>

    <properties>
        <java.version>17</java.version> <!-- Java 17 for Minecraft 1.17+ -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spigot.version>1.20.1-R0.1-SNAPSHOT</spigot.version> <!-- Target Spigot version -->
        <vault.version>1.7.1</vault.version>
        <placeholderapi.version>2.11.2</placeholderapi.version>
        <protocollib.version>5.1.0</protocollib.version>
        <decentholograms.version>2.8.6</decentholograms.version>
        <lombok.version>1.18.28</lombok.version>
        <junit.version>5.10.0</junit.version>
    </properties>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin: Ensures Java version compatibility -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- Maven Shade Plugin: For creating a "fat JAR" with relocated dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <outputFile>${project.build.directory}/${project.artifactId}-${project.version}.jar</outputFile>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <!-- Exclude unnecessary files from shaded JAR -->
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <relocations>
                                <!-- Relocate ProtocolLib to avoid conflicts -->
                                <relocation>
                                    <pattern>com.comphenix.protocol</pattern>
                                    <shadedPattern>com.vortex.vortexchestshop.libs.protocollib</shadedPattern>
                                </relocation>
                                <!-- Add other relocations here if needed for other shaded libraries -->
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!-- Define the resource directory for plugin.yml and config.yml -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <repositories>
        <!-- Maven Central -->
        <repository>
            <id>maven-central</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <!-- SpigotMC Snapshots (for spigot-api) -->
        <repository>
            <id>spigotmc-snapshots</id>
            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
        </repository>
        <!-- Sonatype (for Vault) -->
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/groups/public/</url>
        </repository>
        <!-- ExtendedClip (for PlaceholderAPI) -->
        <repository>
            <id>extendedclip-repo</id>
            <url>https://repo.extendedclip.com/content/repositories/placeholderapi/</url>
        </repository>
        <!-- dmulloy2 (for ProtocolLib) -->
        <repository>
            <id>dmulloy2-repo</id>
            <url>https://repo.dmulloy2.net/repository/public/</url>
        </repository>
        <!-- DecentHolograms Repository -->
        <repository>
            <id>decentholograms-repo</id>
            <url>https://repo.decentholograms.com/releases</url>
        </repository>
        <!-- DecentHolograms Snapshots (optional, if you need bleeding edge) -->
        <repository>
            <id>decentholograms-snapshots</id>
            <url>https://repo.decentholograms.com/snapshots</url>
        </repository>
        <!-- JitPack (if any dependencies are hosted there) -->
        <repository>
            <id>jitpack-repo</id>
            <url>https://jitpack.io</url>
        </repository>
        <!-- PaperMC (if using Paper API instead of Spigot) -->
        <repository>
            <id>papermc</id>
            <url>https://repo.papermc.io/repository/maven-public/</url>
        </repository>
        <!-- SpigotMC Releases (for some plugins) -->
        <repository>
            <id>spigotmc-releases</id>
            <url>https://repo.spigotmc.org/releases/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Spigot API -->
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>${spigot.version}</version>
            <scope>provided</scope> <!-- 'provided' scope means it's available at runtime by the server -->
        </dependency>
        <!-- Vault API -->
        <dependency>
            <groupId>com.github.MilkBowl</groupId>
            <artifactId>VaultAPI</artifactId>
            <version>${vault.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- PlaceholderAPI -->
        <dependency>
            <groupId>me.clip</groupId>
            <artifactId>placeholderapi</artifactId>
            <version>${placeholderapi.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- ProtocolLib -->
        <dependency>
            <groupId>com.comphenix.protocol</groupId>
            <artifactId>ProtocolLib</artifactId>
            <version>${protocollib.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- DecentHolograms -->
        <dependency>
            <groupId>eu.decentsoftware.holograms</groupId>
            <artifactId>decentholograms</artifactId>
            <version>${decentholograms.version}</version>
            <scope>provided</scope> <!-- DecentHolograms is a plugin, so it's 'provided' by the server -->
        </dependency>
        <!-- Lombok (annotation processor, not included in final JAR) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope> <!-- 'provided' for compilation, not runtime -->
        </dependency>
        <!-- JUnit for testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
                                  
